security:
    role_hierarchy:
        ROLE_UNREGISTRED_USER:  ROLE_USER
        ROLE_REGISTRED_USER:    ROLE_USER
        ROLE_ADMIN:             [ROLE_UNREGISTRED_USER, ROLE_REGISTRED_USER]

    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        init:
            pattern:  ^/api/v1/user/init
            stateless: true
            anonymous: true

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - 'App\Security\TokenAuthenticator'

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/v1/user/init, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/user/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/v1/user/register, roles: ROLE_UNREGISTRED_USER }
#        - { path: ^/api/v1/user/logout, roles: ROLE_USER }
        - { path: ^/api/v1, roles: ROLE_USER }
